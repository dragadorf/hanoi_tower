//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
const int n=8;
struct brick
{
	//miejsce na stosie
	int level;
	//kolumna (1-A, 2-B, 3-C)
	int column;
	//szerokosc klocka
	int brick_width;
};
	brick stack[n];
	int top_A;
	int top_B;
	int top_C;
	int a=1;
	int b=2;
	int count=0;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button1Click(TObject *Sender)
{

	top_A=7;
	top_B=-1;
	top_C=-1;

	ProgressBar1->Position=count+1;
    count=0;

	for (int i=0; i<n; i++)
	{
		stack[i].level=i;
		stack[i].column=1;

		switch(i)
		{
		case 0:
			stack[i].brick_width=100;
			break;
		case 1:
			stack[i].brick_width=90;
			break;
		case 2:
			stack[i].brick_width=80;
			break;
		case 3:
			stack[i].brick_width=70;
			break;
		case 4:
			stack[i].brick_width=60;
			break;
		case 5:
			stack[i].brick_width=50;
			break;
		case 6:
			stack[i].brick_width=40;
			break;
		case 7:
			stack[i].brick_width=30;
			break;
		}
	}

    refresh_all();

   }
//---------------------------------------------------------------------------
void TForm1::draw_brick (int x, int y, int height, int width)
{
	PaintBox1->Canvas->Rectangle(x-width/2,y-height/2,x+width/2,y+height/2);
}
//---------------------------------------------------------------------------
void TForm1::draw_line (int xp, int yp, int xk, int yk)
{
	PaintBox1->Canvas->MoveTo(xp, yp);
	PaintBox1->Canvas->LineTo(xk,yk);
}
//---------------------------------------------------------------------------
void TForm1::refresh_all ()
{
   PaintBox1->Canvas->Brush->Color =(TColor) RGB(240,240,240);
   PaintBox1->Canvas->Pen->Color = clBlue;
   PaintBox1->Canvas->FillRect(PaintBox1->Canvas->ClipRect);
   PaintBox1->Canvas->Brush->Color = (TColor) RGB(0,204,204);

	draw_line(25,250,475,250);
	draw_line(100,250,100,75);
	draw_line(250,250,250,75);
	draw_line(400,250,400,75);
	PaintBox1->Canvas->TextOut(400,250,"A");
	PaintBox1->Canvas->TextOut(400,250,"B");
	PaintBox1->Canvas->TextOut(400,250,"C");

	for (int i=0; i < 8; i++)
   {
	   int x;
	   int y;

	   switch(stack[i].column)
		{
		case 1:
			x=100;
			break;
		case 2:
			x=250;
			break;
		case 3:
			x=400;
			break;
		}

	   switch(stack[i].level)
		{
		case 0:
			y=240;
			break;
		case 1:
			y=220;
			break;
		case 2:
			y=200;
			break;
		case 3:
			y=180;
			break;
		case 4:
			y=160;
			break;
		case 5:
			y=140;
			break;
		case 6:
			y=120;
			break;
		case 7:
			y=100;
			break;
		}


	  draw_brick(x, y, 20, stack[i].brick_width);

	  }
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button3Click(TObject *Sender)
{
	Algorithm(1,2);
	AfterClick();
	refresh_all();
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button4Click(TObject *Sender)
{
	Algorithm(2,3);
	AfterClick();
	refresh_all();
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button5Click(TObject *Sender)
{
	Algorithm(1,3);
	AfterClick();
	refresh_all();
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button6Click(TObject *Sender)
{
	a=1;
	b=2;
	Timer1->Enabled=True;

}
//---------------------------------------------------------------------------
void TForm1::Algorithm(int k, int l)
{

	int k_max=-1;
	int l_max=-1;
	int k_index;
	int l_index;

	for (int i =0; i < 8; i++)
	{
		if(stack[i].level>k_max && stack[i].column==k)
		{
			k_max=stack[i].level;
			k_index=i;
		}
		else if(stack[i].level>l_max && stack[i].column==l)
		{
			l_max=stack[i].level;
			l_index=i;
		}
	}


	if (k_max==-1 && l_max==-1)
	{

	}
	else if (k_max==-1)
	{
	   stack[l_index].column=k;
	   stack[l_index].level=k_max+1;
	}

	else if (l_max==-1)
	{
	   stack[k_index].column=l;
	   stack[k_index].level=l_max+1;
	}
	else if (stack[k_index].brick_width>stack[l_index].brick_width)
	{
		stack[l_index].column=k;
		stack[l_index].level=k_max+1;
	}
	else if (stack[k_index].brick_width<stack[l_index].brick_width)
	{
		stack[k_index].column=l;
		stack[k_index].level=l_max+1;
	}


}
void __fastcall TForm1::Timer1Timer(TObject *Sender)
{


	Algorithm(a,b);
	refresh_all();

	if (a==2 && b==3)
	{
	a=1;
	b=2;
	}
	else if (a==1 && b==3)
	{
	a=2;
	b=3;
	}
	else if (a==1 && b==2)
	{
	a=1;
	b=3;
	}

	count++;
	ProgressBar1->Position=count+1;
	StatusBar1->Panels->Items[0]->Text="Liczba Ruchów: " + IntToStr(count);
	if (count==255) {
	Timer1->Enabled=False;
	}

}
//---------------------------------------------------------------------------



void __fastcall TForm1::Edit1Change(TObject *Sender)
{
	Timer1->Interval=StrToInt(Edit1->Text);
}
//---------------------------------------------------------------------------


void __fastcall TForm1::PaintBox1MouseMove(TObject *Sender, TShiftState Shift, int X,
          int Y)
{
	  StatusBar1->Panels->Items[1]->Text="X: " + IntToStr(X)+" "+ "Y: " + IntToStr(Y);
}
//---------------------------------------------------------------------------

void TForm1::AfterClick()
{
	count++;
	StatusBar1->Panels->Items[0]->Text="Liczba Ruchów: " + IntToStr(count);
}
