//---------------------------------------------------------------------------

#include <vcl.h>
#include <math.h>
#pragma hdrstop

#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------

__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
	n=StrToInt(TrackBar1->Position);
	a=1;
	b=2;
	count=0;
	brick stack[n];
	//if...
	max_height=200;
	max_width=140;
	min_width=20;
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button1Click(TObject *Sender)
{
	Initialize();
}
//---------------------------------------------------------------------------
void TForm1::draw_brick (double x, double y, double height, double width)
{
	PaintBox1->Canvas->Rectangle(x-width/2,y-height/2,x+width/2,y+height/2);
}
//---------------------------------------------------------------------------
void TForm1::draw_line (double xp, double yp, double xk, double yk)
{
	PaintBox1->Canvas->MoveTo(xp, yp);
	PaintBox1->Canvas->LineTo(xk,yk);
}
//---------------------------------------------------------------------------
void TForm1::refresh_all ()
{

   PaintBox1->Canvas->Brush->Color =(TColor) RGB(240,240,240);
   PaintBox1->Canvas->Pen->Color = clBlack;
   PaintBox1->Canvas->FillRect(PaintBox1->Canvas->ClipRect);
   PaintBox1->Canvas->TextOut(100,260,"A");
   PaintBox1->Canvas->TextOut(250,260,"B");
   PaintBox1->Canvas->TextOut(400,260,"C");
   PaintBox1->Canvas->Pen->Color = clBlue;
   PaintBox1->Canvas->Brush->Color = (TColor) RGB(0,204,204);



   draw_line(25,250,475,250);
   draw_line(100,250,100,75);
   draw_line(250,250,250,75);
   draw_line(400,250,400,75);


	for (int i=0; i < n; i++)
   {
	   int x;
	   int y;

	   switch(stack[i].column)
		{
		case 1:
			x=100;
			break;
		case 2:
			x=250;
			break;
		case 3:
			x=400;
			break;
		}

		y=250-brick_height/2-stack[i].level*brick_height;

	  draw_brick(x, y, brick_height, stack[i].brick_width);

	  }
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button3Click(TObject *Sender)
{
	Algorithm(1,2);
	AfterClick();
	refresh_all();
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button4Click(TObject *Sender)
{
	Algorithm(2,3);
	AfterClick();
	refresh_all();
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button5Click(TObject *Sender)
{
	Algorithm(1,3);
	AfterClick();
	refresh_all();
}
//---------------------------------------------------------------------------
void __fastcall TForm1::Button6Click(TObject *Sender)
{
	a=1;
	b=2;
	Timer1->Enabled=True;

}
//---------------------------------------------------------------------------
void TForm1::Algorithm(int k, int l)
{

	int k_max=-1;
	int l_max=-1;
	int k_index;
	int l_index;

	for (int i =0; i < n; i++)
	{
		if(stack[i].level>k_max && stack[i].column==k)
		{
			k_max=stack[i].level;
			k_index=i;
		}
		else if(stack[i].level>l_max && stack[i].column==l)
		{
			l_max=stack[i].level;
			l_index=i;
		}
	}


	if (k_max==-1 && l_max==-1)
	{

	}
	else if (k_max==-1)
	{
	   stack[l_index].column=k;
	   stack[l_index].level=k_max+1;
	}

	else if (l_max==-1)
	{
	   stack[k_index].column=l;
	   stack[k_index].level=l_max+1;
	}
	else if (stack[k_index].brick_width>stack[l_index].brick_width)
	{
		stack[l_index].column=k;
		stack[l_index].level=k_max+1;
	}
	else if (stack[k_index].brick_width<stack[l_index].brick_width)
	{
		stack[k_index].column=l;
		stack[k_index].level=l_max+1;
	}


}
void __fastcall TForm1::Timer1Timer(TObject *Sender)
{


	Algorithm(a,b);
	refresh_all();

	if (a==2 && b==3)
	{
	a=1;
	b=2;
	}
	else if (a==1 && b==3)
	{
	a=2;
	b=3;
	}
	else if (a==1 && b==2)
	{
	a=1;
	b=3;
	}

	count++;
	ProgressBar1->Position=count;
	StatusBar1->Panels->Items[0]->Text="Liczba Ruchów: " + IntToStr(count);
	if (count==pow(2,n)-1) {
	Timer1->Enabled=False;
	}

}
//---------------------------------------------------------------------------



void __fastcall TForm1::Edit1Change(TObject *Sender)
{
	Timer1->Interval=StrToInt(Edit1->Text);
}
//---------------------------------------------------------------------------


void __fastcall TForm1::PaintBox1MouseMove(TObject *Sender, TShiftState Shift, int X,
          int Y)
{
	  StatusBar1->Panels->Items[1]->Text="X: " + IntToStr(X)+" "+ "Y: " + IntToStr(Y);
}
//---------------------------------------------------------------------------

void TForm1::AfterClick()
{
	count++;
	StatusBar1->Panels->Items[0]->Text="Liczba Ruchów: " + IntToStr(count);
}

void TForm1::Initialize()
{
	n=StrToInt(TrackBar1->Position);
	brick_height=max_height/n;
	Label2->Caption=brick_height;
	count=0;
	ProgressBar1->Max=pow(2,n)-1;
	ProgressBar1->Position=count;
	StatusBar1->Panels->Items[0]->Text="Liczba Ruchów: " + IntToStr(count);

	for (int i=0; i<n; i++)
	{
		stack[i].level=i;
		stack[i].column=1;

		double d=double(i)/double(n);

		stack[i].brick_width=max_width-d*(max_width-min_width);
	}

	refresh_all();
}
void __fastcall TForm1::TrackBar1Change(TObject *Sender)
{
	Initialize();
    Label2->Caption=IntToStr(TrackBar1->Position);
}
//---------------------------------------------------------------------------

